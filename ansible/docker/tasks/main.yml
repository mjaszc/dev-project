---
# tasks file for docker
- name: Install Docker packages 1/2
  remote_user: root
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - apt-transport-https
    - ca-certificates
    - curl
    - python3-pip
  tags:
    - docker

- name: Add Dockers official GPG key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0755'
  tags:
    - docker

- name: Add Docker APT repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
  tags:
    - docker

- name: Install Docker packages 2/2
  remote_user: root
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - docker-buildx-plugin
    - docker-compose-plugin
  tags:
    - docker

- name: Create {{ directory_name }} directory
  ansible.builtin.file:
    path: /home/ubuntu/{{ directory_name }}
    state: directory
    owner: root
    mode: '0755'

- name: Copy docker-compose.yml to remote host
  copy:
    src: "../../docker-compose.yml"
    dest: "/home/ubuntu/{{ directory_name }}/docker-compose.yml"
    mode: '0644'

- name: Copy .env to remote host
  copy:
    src: "../../.env"
    dest: "/home/ubuntu/{{ directory_name }}/.env"
    mode: '0644'

- name: Ensure UFW allows port 3000/tcp (if UFW installed)
  ansible.builtin.ufw:
     rule: allow
     port: '3000'
     proto: tcp
  when: ansible_facts.packages.ufw is defined

- name: Start the compose stack (create & start)
  community.docker.docker_compose_v2:
    project_src: "/home/ubuntu/{{ directory_name }}"
    state: present
    build: "never"
  register: compose_result